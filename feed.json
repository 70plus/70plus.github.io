{
    "version": "https://jsonfeed.org/version/1",
    "title": "70plus - and still a lot to do",
    "description": "",
    "home_page_url": "https://70plus.github.io",
    "feed_url": "https://70plus.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "Pasquale"
    },
    "items": [
        {
            "id": "https://70plus.github.io/prolog-e-la-programmazione-logica.html",
            "url": "https://70plus.github.io/prolog-e-la-programmazione-logica.html",
            "title": "Prolog e la programmazione logica",
            "summary": "Il mio primo incontro con il Prolog e la programmazione logica risale ai primi anni '90 del secolo scorso, quando trovai un compilatore per il linguaggio Prolog installato sul pc assegnato a un tesista che avevo seguito in qualità di&hellip;",
            "content_html": "<p>Il mio primo incontro con il <a href=\"https://it.wikipedia.org/wiki/Prolog\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Prolog</a> e la <strong>programmazione logica</strong> risale ai primi anni '90 del secolo scorso, quando trovai un <strong>compilatore per il linguaggio Prolog</strong> installato sul pc assegnato a un tesista che avevo seguito in qualità di relatore esterno.<br>In quegli anni mi capitò diverse volte di essere relatore esterno di tesi di laurea presso l'Ateneo di Pisa. Il laureando di turno svolgeva il suo lavoro di ricerca presso i laboratori Olivetti di Ivrea, affidato a un interno (io, in questi casi), lavorando su un pc messo a disposizione dalla Olivetti stessa.<br>Si trattava in genere di pc utilizzati per test, che venivano appunto distratti per alcuni mesi. Una volta discussa la tesi, il laureando (ormai laureato) liberava il pc, rimuovendo file e programmi che aveva caricato sul pc.</p>\n<h4>Il Prolog, per fare cosa</h4>\n<p>Quel compilatore Prolog rimase invece installato e, complice l'avvicinarsi delle ferie con il conseguente calo del carico di lavoro, nelle settimane successive spesi diverse ore a giocare con la programmazione logica.<br>Del codice che mi divertii a mettere insieme, ricordo due programmi: un inventario dei libri che avevo in casa e un gestore di pianificazione operativa con i <a href=\"https://it.wikipedia.org/wiki/Diagramma_di_Gantt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">diagrammi di Gantt</a>.</p>\n<p>A quell'epoca sui pc girava <strong>Windows 3.1</strong>, mentre <strong>Excel</strong> era una chicca per pochi fortunati. Quindi sviluppare un programma che mi consentiva, interattivamente, di elencare i libri scritti da Tizio, o editi da Caio, o che nel titolo avessero un particolare termine, non era una cosa da poco.</p>\n<p>Il programma di pianificazione operativa, invece, mi accompagnò sul lavoro per qualche mese, ma non si rivelò di particolare utilità, e così dopo un po' la programmazione logica finì in cantina (dove dev'esserci ancora qualche listato, che prima o poi riporterò alla luce).</p>\n<h4>Il Prolog oggi</h4>\n<p>A distanza di tanti anni ho ritrovato il Prolog tra gli ambienti di sviluppo offerti dalla piattaforma <a href=\"https://www.tutorialspoint.com/execute_prolog_online.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Tutorialspoint</a>. <em>Googlando</em> un po', ho scoperto che è tuttora utilizzato nell'ambito per cui era nato, l'intelligenza artificiale.<br>Ho provato quindi a rispolverare i ricordi, anche se riprendere è quasi come tornare ai primi passi incerti.</p>\n<h4>Le basi del Prolog</h4>\n<p>Il Prolog <strong>non è</strong> un linguaggio <strong>imperativo</strong>, né <strong>funzionale</strong> , né <strong>a oggetti</strong>.<br>Nel primo caso, infatti, la macchina dovrebbe eseguire sequenze di istruzioni che intendono risolvere un particolare compito, ma non è così. Nel secondo caso, l'elaborazione dovrebbe basarsi sul richiamo di un insieme di funzioni, ma ancora una volta non è questo il caso. Infine l'esecuzione di un programma Prolog non si basa nemmeno sulla definizione di un insieme di oggetti software e sui messaggi che questi si scambiano.</p>\n<p>Nel Prolog, invece, il programma lavora per sintesi di proposizioni logiche, e consiste di un insieme di <strong>fatti</strong> e <strong>regole</strong>, che si assume descrivano in modo compiuto l'ambito si cui si lavora. Il programma Prolog deve calcolare se una proposizione assegnata è vera o meno, sulla base di fatti e regole disponibili.</p>\n<h4>Un esempio: figli e genitori</h4>\n<p>Ho una nipotina, Luna, gioia dei genitori Valentina e Giovanni. Al Prolog posso raccontare la cosa mediante due fatti:</p>\n<blockquote>\n<p>genitore(luna, valentina).<br>genitore(luna,giovanni).</p>\n</blockquote>\n<p>Ho implicitamente definito una relazione <em>genitore(X,Y)</em>, in cui <em>Y</em> è genitore di <em>X</em>. Da notare il punto finale che chiude l'affermazione del fatto, e l'utilizzo della minuscola iniziale per le stringhe e della maiuscola inziale per le variabili.</p>\n<p>Potrei ora avere l'obiettivo di elencare i genitori di <em>luna</em>. Se scrivessi:</p>\n<blockquote>\n<p>genitori(luna) :- genitore(luna, X), write(X).</p>\n</blockquote>\n<p>il programma troverebbe solo il primo genitore, <em>valentina</em>, e soddisfatto di aver concluso positivamente il suo obiettivo, si arresterebbe. Da notare qui il simbolo <em>\"</em><em>:-\"</em> e il connettivo<em> \",\"</em>. La frase si legge:</p>\n<blockquote>\n<p>genitore di luna <strong>è vero</strong> se un genitore di luna è X <strong>e</strong> stampo X.</p>\n</blockquote>\n<p>Come fare per ottenere la stampa del nome di tutti e due i genitori? Basta far <strong>fallire</strong> questa concatenazione, costringendo il programma a cercare un ulteriore genitore. Il programma si complica un po':</p>\n<blockquote>\n<p>:- initialization(main).<br>genitore(luna, valentina).<br>genitore(luna,giovanni).<br>scrivi(X) :- X \\== \"\", write(X), nl.<br>scrivi(_).<br>genitori(X) :- genitore(X,Y), scrivi(Y), fail.<br>genitori(_).<br>main :- genitori(luna).</p>\n</blockquote>\n<p>Ho strutturato il programma in:</p>\n<ul>\n<li>la riga introduttiva, che definisce qual'è l'obiettivo del programma (<em>main</em>);</li>\n<li>un obiettivo principale (stampa il nome dei genitori di <em>luna</em>);</li>\n<li>un predicato <em>scrivi</em>, che stampa il valore che gli viene passato, se è una stringa non vuota, e subito dopo fallisce, mentre ha successo se il valore passato è una stringa vuota;</li>\n<li>un predicato <em>genitori</em>, che fallisce tutte le volte che trova un genitore (e ne stampa il nome), mentre ha successo quando ha esaurito la sua ricerca.</li>\n</ul>\n<p>Il fallimento di un predicato causa il <em>backtracking</em> del programma, cioè la ricerca all'indietro di altre soluzioni possibili.</p>\n<p>Evviva, il programma risponde correttamente:</p>\n<blockquote>\n<p>valentina<br>giovanni</p>\n</blockquote>\n<h4>Un albero genealogico più ricco</h4>\n<p>Si può arricchire la base dei fatti disponibili e aggiungere una regola che definisca cos'è un <em>nonno</em> e cos'è un <em>bisnonno</em>:</p>\n<blockquote>\n<p>:- initialization(main).<br><br>  genitore(luna,valentina).<br>  genitore(luna,giovanni).<br>  genitore(valentina,orsella).<br>  genitore(valentina,pasquale).<br>  genitore(giovanni,teresa).<br>  genitore(giovanni,mauro).<br>  genitore(orsella,sisina).<br>  genitore(orsella,ciccio).<br><br>  genitori(X) :- genitore(X,Y), scrivi(Y), fail.<br>  genitori(_).<br>  nonni(X) :- genitore(X,Y), genitore(Y, Z), scrivi(Z), fail.<br>  nonni(_).<br>  bisnonni(X) :- genitore(X,Y), genitore(Y, Z), genitore(Z,W), scrivi(W), fail.<br>  bisnonni(_).<br>  <br>  scrivi(X) :- X \\== \"\", write(X), nl, fail.<br>  scrivi(_).<br>  <br>  main :- write('I genitori di Luna sono:'), nl, genitori(luna), nl, <br>        write('I nonni di Luna sono:'), nl, nonni(luna), nl, <br>        write('I bisnonni di Luna sono:'), nl, bisnonni(luna).</p>\n</blockquote>\n<p>La lettura delle nuove regole è abbastanza semplice:</p>\n<ul>\n<li>se <em>X</em> ha come genitore <em>Y</em> e <em>Y</em> ha come genitore <em>Z</em>, allora <em>X </em>ha come nonno <em>Z;</em></li>\n<li>se <em>X</em> ha come genitore <em>Y,</em> <em>Y</em> ha come genitore <em>Z</em> e <em>Z</em> ha come genitore <em>W</em>,  allora <em>X </em>ha come bisnonno <em>W</em>.</li>\n</ul>\n<p>Il programma, correttamente, elenca quanto richiesto:</p>\n<blockquote>\n<p>I genitori di Luna sono:<br>valentina<br>giovanni<br><br>I nonni di Luna sono:<br>orsella<br>pasquale<br>teresa<br>mauro<br><br>I bisnonni di Luna sono:<br>sisina<br>ciccio</p>\n</blockquote>\n<h4>E figli e fratelli?</h4>\n<p>Si potrebbe arricchire ancora la base dati, aggiungendo qualche regola:</p>\n<blockquote>\n<p>figlio(X,Y) :- genitore(Y,X).<br>cioè: X ha come figlia/o Y se Y ha come genitore X;</p>\n<p>fratello(X,Y) :- genitore(X,Z), genitore(Y,Z).<br>cioè: X e Y sono fratelli (o sorelle) se hanno un genitore in comune.</p>\n</blockquote>\n<p>ma direi che con le esplorazioni familiari mi fermo un passo prima.<br>Però, adesso che ho la soluzione (il Prolog), devo trovare un problema.</p>\n<p>Foto di apertura di <a href=\"https://pixabay.com/it/users/maciej326-1771256/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1905155\" target=\"_blank\" rel=\"noopener\">Monika Grafik</a> da <a href=\"https://pixabay.com/it//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1905155\" target=\"_blank\" rel=\"noopener\">Pixabay</a>.</p>",
            "image": "https://70plus.github.io/media/posts/18/alien-g2dd5ccc42_1920.png",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Ricordi",
                   "Cose informatiche"
            ],
            "date_published": "2023-01-16T17:07:14+01:00",
            "date_modified": "2023-01-16T22:02:16+01:00"
        },
        {
            "id": "https://70plus.github.io/disegnare-un-cuore.html",
            "url": "https://70plus.github.io/disegnare-un-cuore.html",
            "title": "Disegnare un cuore",
            "summary": "Correva il 2006 quando pubblicai nel mio blog Elaborando, da poco creato su Libero, il post: Disegnare un cuore. A parte rifare il verso ad Art Attack, mitico programma televisivo per i ragazzi, il post riportava un semplice espediente grafico. Mai&hellip;",
            "content_html": "<p>Correva il 2006 quando pubblicai nel mio blog <em><strong>Elaborando</strong></em>, da poco creato su Libero, il post: <em><strong>Disegnare un cuore</strong></em>.</p>\n<figure class=\"post__image align-center\"><img loading=\"lazy\"  src=\"https://70plus.github.io/media/posts/17/cuore.png\" alt=\"Disegnare un cuore - post su Elaborando\" width=\"499\" height=\"431\" sizes=\"(min-width: 1500px) calc(7.87vw + 610px), (min-width: 900px) calc(44.48vw + 68px), (min-width: 780px) calc(8vw + 604px), calc(84.35vw + 23px)\" srcset=\"https://70plus.github.io/media/posts/17/responsive/cuore-xs.png 300w ,https://70plus.github.io/media/posts/17/responsive/cuore-sm.png 480w ,https://70plus.github.io/media/posts/17/responsive/cuore-md.png 768w\"></figure>\n<p>A parte rifare il verso ad <strong>Art Attack</strong>, mitico programma televisivo per i ragazzi, il post riportava un semplice espediente grafico.<br>Mai avrei pensato che quel post avrebbe procurato una fetta rilevante del traffico al blog, negli anni che seguirono.<br>Dettaglio interessante, la pagina riceveva visite in modo particolare a ridosso del <strong>14 febbraio</strong>, probabilmente rispondendo all'esigenza diffusa di trovare in extremis una carineria da dedicare alla propria lei.</p>\n<h4>Io e il SEO</h4>\n<p>Non so se quel post oggi riscuota o meno un residuo successo, i contatori del blog sono saltati, per mancata manutenzione. All'epoca a portare traffico era il motore di ricerca Google, con diverse chiavi sul tema richiamato dal titolo del post: \"<em>Disegnare un cuore</em>\", ma erano gettonate anche: \"<em>come disegnare un cuore</em>\", \"<em>come disegnare un cuore perfetto</em>\", \"<em>disegna un cuore</em>\", \"<em>cuori da disegnare</em>\",  \"<em>disegnare cuore</em>\", \"<em>come si disegna un cuore</em>\".<br>In queste <em>query</em> il mio post rimase a lungo stabile nella prima decina di risultati. Poi sono arrivati video su youtube e proposte alternative, e il mio post è scivolato via via verso l'oblio.</p>\n<p>Nel blog c'erano altri 4-5 post che nel tempo hanno ricevuto traffico apprezzabile da Google e mi sono sempre chiesto quanto sia stato rilevante per il motore di ricerca l'aver prodotto centinaia e centinaia di post.<br>Per me lo è stato, il blog è stato una sorta di diario da riempire con veloci annotazioni al mattino presto, prima di affrontare la quotidiana Ivrea-Milano.</p>\n<h4>E oggi, come si disegnerebbe un cuore?</h4>\n<p>Qualche giorno fa un articolo del sito <a href=\"https://www.lealternative.net/2023/01/09/siti-belli-e-basta-quinta-parte/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Le Alternative</a> mi ha portato a scoprire <a href=\"https://www.templatemaker.nl/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Templatemaker</a>: con poco sforzo è possibile scaricare in formato pdf il template da stampare e ritagliare per ottenere scatole e buste di varie forme. E sì, ci sono anche le scatole a forma di cuore.</p>\n<p>È evidente che non c'è gara, Templatemaker batte il mio post mille a uno: si possono scegliere le dimensioni, agire sulla forma, regolare addirittura le dimensioni dei bordi da piegare e incollare per formare e tenere insieme la scatola.</p>\n<p>Quasi quasi provo a realizzarne una. Prima però devo pensare a cosa metterci dentro, senza svenarmi.</p>\n<p><em>Nell'immagine: una mia foto di un po' di anni fa.</em></p>\n<p> </p>\n<p> </p>",
            "image": "https://70plus.github.io/media/posts/17/noce_cuore-2.jpg",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Ricordi"
            ],
            "date_published": "2023-01-12T22:52:43+01:00",
            "date_modified": "2023-01-13T09:00:40+01:00"
        },
        {
            "id": "https://70plus.github.io/le-mie-note-personali-con-obsidian.html",
            "url": "https://70plus.github.io/le-mie-note-personali-con-obsidian.html",
            "title": "Le mie note personali con Obsidian",
            "summary": "Da un paio di mesi utilizzo Obsidian per gestire le mie note personali. Ci sono arrivato dopo aver utilizzato, tanti anni fa, Evernote, poi file sparsi, Stackedit e infine, in tempi più recenti, Notion. Obsidian è un'applicazione che gira su&hellip;",
            "content_html": "<p>Da un paio di mesi utilizzo <a href=\"https://obsidian.md/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Obsidian</a> per gestire le mie note personali.<br>Ci sono arrivato dopo aver utilizzato, tanti anni fa, <a href=\"https://evernote.com/intl/it\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Evernote</a>, poi file sparsi, <a href=\"https://stackedit.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Stackedit</a> e infine, in tempi più recenti, <a href=\"https://www.notion.so/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Notion</a>.</p>\n<h4>Cos'è Obsidian</h4>\n<p>Obsidian è un'applicazione che <em>gira</em> su <strong>Windows</strong>, <strong>macOS</strong>, <strong>Linux</strong>, <strong>iOS</strong> e <strong>Android</strong>.<br>Nel campo ricchissimo delle applicazioni di gestione delle note, Obsidian spicca per alcune caratteristiche che ritengo vantaggiose:</p>\n<ol>\n<li>le note utilizzano il linguaggio <strong>Markdown</strong>, e sono memorizzate nel file system della propria macchina come file testo (con estensione .md); in ogni momento, quindi, è possibile accedere con un semplice editor a ogni singola nota, anche al di fuori dall'applicazione; <em>le note sono mie e me le gestisco io</em>;</li>\n<li>il Markdown di Obsidian consente di inserire diagrammi, grazie al linguaggio <strong>Mermaid</strong>, e frammenti di codice di programmazione (Python, C, html, ...), evidenziandone la sintassi; i due diagrammi che seguono sono stati realizzati, in Obsidian, con Mermaid;</li>\n<li>intorno a Obsidian si è formata una community di sviluppatori di <strong>estensioni</strong>, che rendono l'applicazione estremamente potente e configurabile sulle proprie esigenze;</li>\n<li>anche se, nella versione free, Obsidian non consente di accedere alla propria base di note da più di un dispositivo, è abbastanza semplice aggirare l'ostacolo utilizzando l'applicazione <strong>Dropbox</strong>.</li>\n</ol>\n<h4>L'architettura del mio ambiente di note personali con Obsidian</h4>\n<p>Utilizzo normalmente un pc con Xubuntu Linux, un MacBook e, più di rado, un pc Windows 11. Non può mancare uno smartphone per la mobilità, nel mio caso un Android 12.<br>Come premesso, per l'accesso da più dispositivi mi affido a un account gratuito di Dropbox. Questa è l'architettura che ho realizzato:</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://70plus.github.io/media/posts/16/architettura.png\" alt=\"Architettura multi-dispositivo, realizzata con Obsidian e Dropbox\" width=\"630\" height=\"313\" sizes=\"(min-width: 1500px) calc(7.87vw + 610px), (min-width: 900px) calc(44.48vw + 68px), (min-width: 780px) calc(8vw + 604px), calc(84.35vw + 23px)\" srcset=\"https://70plus.github.io/media/posts/16/responsive/architettura-xs.png 300w ,https://70plus.github.io/media/posts/16/responsive/architettura-sm.png 480w ,https://70plus.github.io/media/posts/16/responsive/architettura-md.png 768w\"></figure>\n<p>La struttura di file e cartelle della base dati (il v<strong>ault</strong> nella terminologia Obsidian), è ospitata nella cartella Dropbox, sincronizzata tra i vari dispositivi.<br>Il piano gratuito di Dropbox consente di collegare fino a 3 dispositivi, quindi per forza di cose il pc Windows, utilizzato più di rado, è normalmente fuori gioco, come evidenziato dalla linea tratteggiata.</p>\n<p>Sullo smartphone non ho installato l'app Obsidian, perché da mobile mi limito a <em>catturare</em> un'idea, memorizzandola in un file di testo creato con l'app Dropbox. Basta salvarla con estensione .md, riporla in una cartella particolare del proprio <em>vault</em> Obsidian, per poi ritrovarsela accedendo al pc linux o al MacBook.<br>Particolare non trascurabile, la nota può essere <em>dettata</em> allo smartphone, semplificando ulteriormente il tutto.</p>\n<h4>La struttura delle note</h4>\n<p>Via via che si salvano note, diventa sempre più complicato raccapezzarsi quando si vuol riaprire una particolare nota. Sono certamente di aiuto i <strong>tag</strong> che Obsidian consente di aggiungere a una singola nota, e naturalmente il motore di ricerca interno all'applicazione.</p>\n<p>È però utile organizzare le annotazioni secondo una struttura semplice, basata su poche regole, ma funzionali.<br>Ho organizzato le mie note secondo la struttura che si vede nel diagramma qui sotto.</p>\n<figure class=\"post__image align-center\"><img loading=\"lazy\"  src=\"https://70plus.github.io/media/posts/16/struttura.png\" alt=\"Struttura organizzativa delle note nel mio vault Obsidian\" width=\"509\" height=\"345\" sizes=\"(min-width: 1500px) calc(7.87vw + 610px), (min-width: 900px) calc(44.48vw + 68px), (min-width: 780px) calc(8vw + 604px), calc(84.35vw + 23px)\" srcset=\"https://70plus.github.io/media/posts/16/responsive/struttura-xs.png 300w ,https://70plus.github.io/media/posts/16/responsive/struttura-sm.png 480w ,https://70plus.github.io/media/posts/16/responsive/struttura-md.png 768w\"></figure>\n<p>In dettaglio:</p>\n<ul>\n<li>il vault è organizzato per <strong>aree di interesse</strong> (es.: Linux, sito 70plus, math, ...);</li>\n<li>per ogni mia area di interesse creo, nel primo livello del vault, una pagina di sommario;</li>\n<li>nel primo livello del vault ci sono anche alcune cartelle specifiche:\n<ul>\n<li><strong>note</strong>, che contiene <strong>una cartella per ogni area di interesse</strong>, nella quale inserirò le note create via via; se un’idea è legata a più aree di interesse, starà nella cartella dell’area con cui ha più attinenza;</li>\n<li>nella cartella note c'è un'ulteriore cartella contenente delle <strong>tabelle Kanban,</strong> una per ogni area di interesse; l’installazione di un plug-in su Obsidian consente infatti di creare questo tipo di tabella nella versione più semplice possibile, sufficiente comunque allo scopo;</li>\n</ul>\n</li>\n<li>Sempre sul primo livello del vault, ho poi le cartelle:<br>\n<ul>\n<li><strong>dropnotes</strong>, che contiene le note inserite da smartphone, successivamente editate e spostate nella cartella di note di appartenenza;</li>\n<li><strong>immagini</strong>, cartella con le immagini esterne inserite nelle varie note;</li>\n<li><strong>modelli</strong>, con i template creati per impostare note di formato ripetitivo (esempio: report di riunioni, recensioni di film o libri; io mi sono approntato un template per inserire data e sommario in una nota, e uno per le ricette di cucina che sto imparando a realizzare in modo più o meno passabile).</li>\n</ul>\n</li>\n</ul>\n<h4>Struttura delle note: vista ad albero</h4>\n<p>Una vista semplificata della struttura realizzata, eliminando le <em>foglie</em> dell'albero e riducendo le aree di interesse:</p>\n<pre>.\n├── dropnotes\n│   └── ...\n├── Immagini\n│   └── ...\n├── modelli\n│   ├── data.md\n│   └── modello di una ricetta.md\n├── Note\n│   ├── Kanban\n│   │   ├── Bacheca di Cucina.md\n│   │   ├── Bacheca Linux.md\n│   │   └── Bacheca sito 70plus.md\n│   ├── 70plus\n│       └── ...\n│   ├── Cucina\n│       └── ...\n│   ├── da_fare\n│       └── ...\n│   └── Linux\n│       └── ...\n├── Cucina.md\n├── Da fare.md\n├── Linux.md\n└── Sito 70plus.md</pre>\n<h4>Effetti sulla produttività</h4>\n<p>Ho passato da poco il centinaio di note e devo dire che è aumentata notevolmente la mia produttività, in varie direzioni: articoli su <a href=\"https://inchiostrovirtuale.it/author/p-petrosinoinchiostrovirtuale-it/\" target=\"_blank\" rel=\"noopener noreferrer\">Inchiostro Virtuale</a>, esperimenti su Linux, le mie ricerche matematiche; persino le mie qualità culinarie sono migliorate (però questo me lo dico da solo).<br>Il motivo: la semplicità di Obsidian è uno stimolo insospettato ad annotare cose, e la velocità nel ritrovarle libera spazio per la creatività.</p>",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Cose informatiche"
            ],
            "date_published": "2023-01-09T16:08:05+01:00",
            "date_modified": "2023-01-09T16:52:10+01:00"
        },
        {
            "id": "https://70plus.github.io/nove-volte-sette-isaac-asimov-1958.html",
            "url": "https://70plus.github.io/nove-volte-sette-isaac-asimov-1958.html",
            "title": "Nove volte sette - Isaac Asimov, 1958",
            "summary": "«Ci sono quasi arrivato, signore... Ecco il prodotto, signore. Quarantun milioni, cinquecentotrentasettemilatrecentottantadue.» Mostrò la cifra scarabocchiata in fondo all'ultimo foglio. Il generale Weider sorrise condiscendente. Premette il pulsante di moltiplicazione sulla sua calcolatrice e attese che il ronzio dei meccanismi&hellip;",
            "content_html": "<p><em>«Ci sono quasi arrivato, signore... Ecco il prodotto, signore.  Quarantun milioni, cinquecentotrentasettemilatrecentottantadue.»</em></p>\n<p>Mostrò la cifra scarabocchiata in fondo all'ultimo foglio.<br>Il generale Weider sorrise condiscendente. Premette il pulsante di  moltiplicazione sulla sua calcolatrice e attese che il ronzio dei  meccanismi tacesse. Poi guardò il quadrante della minuscola macchina e  disse con voce rauca dallo stupore:</p>\n<p class=\"align-center\"><em>«Grande Galassia, l'ha azzeccato in  pieno.»</em></p>\n<p><em>Da: <a href=\"https://it.wikipedia.org/wiki/Nove_volte_sette\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Nove volte sette</a>.</em></p>",
            "image": "https://70plus.github.io/media/posts/10/If_195802t.jpg",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Numeri"
            ],
            "date_published": "2023-01-03T23:10:35+01:00",
            "date_modified": "2023-01-09T16:28:12+01:00"
        },
        {
            "id": "https://70plus.github.io/il-caffe.html",
            "url": "https://70plus.github.io/il-caffe.html",
            "title": "Il caffè",
            "summary": "Sono un consumatore accanito di caffè. Deve essere amaro ma, quando al distributore automatico dimentico di annullare lo zucchero, mi limito a non mescolare. Mi piace la miscela densa che rimane sul fondo. Ristretto, normale, lungo, americano? Ognuno ha il&hellip;",
            "content_html": "<p>Sono un consumatore accanito di caffè. Deve essere <strong>amaro</strong> ma, quando al distributore automatico dimentico di annullare lo zucchero, mi limito a non mescolare. Mi piace la miscela densa che rimane sul fondo.</p>\n<p><strong>Ristretto, normale, lungo, americano?</strong> Ognuno ha il suo momento.<br>Il primo caffè del mattino, scorrendo le notizie sul web, dev'essere ristretto (nonché rigorosamente amaro). Un'ora dopo, con la colazione, si comincia ad allungare, per finire nel lunghissimo a metà mattinata. Strettissimo a chiusura del pasto, si prosegue così allungando e accorciando per seguire il bioritmo della giornata.</p>\n<p>Perché l'effetto del caffè sulla produttività al lavoro è evidente e documentato:</p>\n<blockquote>\n<p>A mathematician is a machine for turning coffee into theorems.<br>(<a href=\"https://it.wikipedia.org/wiki/Paul_Erd%C5%91s\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Paul Erdős.</a>)</p>\n</blockquote>\n<p>Un effetto simile, adeguando al ribasso la scala e cambiando settore di attività, capita anche a me. Non so se prevalga l'effetto chimico della caffeina, oppure se semplicemente i neuroni necessari al rituale della tazzina si stacchino, lasciando tutti gli altri a riordinare il tavolo da lavoro virtuale nella testa.</p>\n<p>Sta di fatto che, con la tazza fumante a sinistra del foglio, la mano destra riprende con decisione a tracciare idee che sembrano uscire dal nulla: ecco, bastava fare così.<br>Merito del caffè, probabilmente.</p>\n<p><em>Post pubblicato nel 2011 su Elaborando. Adesso prendo meno caffè, ma il piacere è rimasto intatto.</em></p>",
            "image": "https://70plus.github.io/media/posts/9/1672902875369e-2.jpg",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Ricordi"
            ],
            "date_published": "2023-01-03T15:37:52+01:00",
            "date_modified": "2023-01-09T16:29:14+01:00"
        },
        {
            "id": "https://70plus.github.io/la-signora-monet.html",
            "url": "https://70plus.github.io/la-signora-monet.html",
            "title": "La signora Monet",
            "summary": "Quando ancora abitavo a Ivrea, nel mio studio avevo due poster ai lati della scrivania: a destra una dolcissima Marilyn Monroe che stringe al petto un giornale, a sinistra la signora Monet che si protegge dai raggi di sole con&hellip;",
            "content_html": "<p>Quando ancora abitavo a Ivrea, nel mio studio avevo due poster ai lati della scrivania: a destra una dolcissima <strong>Marilyn Monroe </strong>che stringe al petto un giornale, a sinistra <strong>la signora Monet</strong> che si protegge dai raggi di sole con un ombrellino, mentre con il figlioletto cammina in un campo.<br>Volendo pubblicare un'immagine del quadro, con grande sorpresa tutta dovuta alla mia ignoranza, scoprii che Monet dipinse due quadri abbastanza simili: <strong>la Promenade</strong> (1873, è quello riprodotto nel mio poster) e <strong>la Femme à l'ombrelle</strong> (1875).<br><br>Da qualche anno Marylin e Camille mi aspettano al mare. Se riesco a convincere mia moglie, me ne porto una a Lecco.</p>\n<p><em>Nella foto:<br>Di Claude Monet - Photographer: Alexander R. Pruss., Pubblico dominio, https://commons.wikimedia.org/w/index.php?curid=44143</em></p>",
            "image": "https://70plus.github.io/media/posts/8/Monet_Umbrella.jpeg",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Ricordi"
            ],
            "date_published": "2023-01-03T15:22:51+01:00",
            "date_modified": "2023-01-09T16:32:55+01:00"
        },
        {
            "id": "https://70plus.github.io/lindovinello-dei-travasi.html",
            "url": "https://70plus.github.io/lindovinello-dei-travasi.html",
            "title": "L&#x27;indovinello dei travasi",
            "summary": "Nel film Die Hard - Duri a morire, la coppia del poliziotto McClane (Bruce Willis) e del negoziante Zeus Carver (Samule L. Jackson) si trova a risolvere un enigma logico-matematico per disinnescare una bomba che sta per esplodere. Devono isolare&hellip;",
            "content_html": "<p>Nel film <strong>Die Hard - Duri a morire</strong>, la coppia del poliziotto McClane (Bruce Willis) e del negoziante Zeus Carver (Samule L. Jackson) si trova a risolvere un enigma logico-matematico per disinnescare una bomba che sta per esplodere.<br>Devono isolare una quantità di 4 galloni d'acqua, avendo a disposizione due recipienti non graduati da 3 e 5 galloni, rispettivamente. Ci riescono, ovviamente pochi attimi prima dell'esplosione, mediante una serie di: riempi, svuota e travasa tra i due recipienti.<br><br>Come si affronta un problema del genere? Quando è possibile trovare una soluzione, e quando no? Vediamo come risolvere, a cavallo tra matematica e Python.</p>\n<h4>Le mosse del gioco</h4>\n<p>Per dare un minimo di generalità al problema, denotiamo con <strong>A</strong> e <strong>B</strong> i due recipienti e con <strong>Q</strong> la quantità di acqua da isolare.<br><br>Si può procedere attraverso questo approccio:</p>\n<ol>\n<li>riempire il recipiente <strong>A</strong>;</li>\n<li>versare il contenuto di <strong>A</strong> in <strong>B</strong>, tutto o per quanto è possibile senza far traboccare <strong>B</strong>;</li>\n<li>quando <strong>B</strong> si riempie completamente, svuotarlo;</li>\n<li>ripetere i punti 2. e 3., fino a che:<br>\n<ol style=\"list-style-type: lower-alpha;\">\n<li>in uno dei due contenitori rimane la quantità <strong>Q</strong> (gioco risolto! fine della procedura),</li>\n<li>oppure <strong>A</strong> si svuota;</li>\n</ol>\n</li>\n<li>ripartire dal punto 1.</li>\n</ol>\n<p>È ovviamente possibile anche eseguire la procedura scambiando i ruoli tra A e B.<br>Che una delle due sequenze (o entrambe) risolvano il problema è ancora da dimostrare, è però evidente (o almeno così mi pare) che non vi siano altri metodi percorribili.</p>\n<h4>Un'equazione diofantea e la matematica dell'orologio</h4>\n<p>Cerchiamo di tradurre in termini matematici la prima delle due procedure. Per l'altra si potrà procedere in modo analogo.<br><br>Alla fine del gioco, avremo riempito <strong>x</strong> volte il contenitore <strong>A</strong> e svuotato <strong>y</strong> volte il contenitore <strong>B</strong>, arrivando alla situazione in cui in <strong>A</strong> o in <strong>B</strong> si trova una quantità <strong>Q</strong> di acqua. In altri termini:</p>\n<p class=\"align-center\"><strong>xA = yB + Q</strong></p>\n<p>Un'equazione di questo tipo,  si dice <strong>diofantea</strong>, dal matematico greco Diofanto di Alessandria, quando i coefficienti A, B e Q, e le soluzioni x, y sono numeri interi.<br><br>Un altro modo di scrivere questa equazione è quello di utilizzare l'aritmetica modulare, inventata da Carl Friedrich Gauss, e anche detta aritmetica dell'orologio:</p>\n<p class=\"align-center\"><strong>xA ≡ Q mod B</strong><br><br></p>\n<p>Ebbene, si dimostra che questa congruenza:</p>\n<ul>\n<li>se A e B sono primi tra loro, ha esattamente una soluzione;</li>\n<li>se A e B hanno un MCD d ≠1, ha d soluzioni se d divide Q;</li>\n<li>in tutti gli altri casi, ha zero soluzioni.</li>\n</ul>\n<h4>L'aritmetica modulare spiegata semplice</h4>\n<p>Beh, quantomeno spero di riuscire a raccontarla in modo semplice.<br>Partiamo <strong>dall'orologio</strong>: se aggiungo 7 ore alle 10 (di mattina o di sera) ottengo le 5 (rispettivamente di sera o di mattina). Sto eseguendo infatti una somma in modulo 12, e il risultato di un'operazione tra interi potrà solo dare un risultato intero tra 0 e 11.</p>\n<p>Nella notazione modulare, l'operazione si scrive così:</p>\n<p class=\"align-center\"><strong>7 + 10 ≡ 5 mod 12</strong></p>\n<p>e si legge: 7 più 10 è congruente a 5, modulo 12.<br>La divisione tra interi fornisce un altro modo per spiegare la congruenza:</p>\n<p class=\"align-center\"><strong>7 + 10 fa 17, che diviso per 12 dà un resto di 5</strong></p>\n<p>Nell'aritmetica modulare le congruenze prendono il posto delle equazioni. Ci si può chiedere, ad esempio, quali valori interi di x soddisfino la congruenza:</p>\n<p class=\"align-center\"><strong>11x ≡ 4 mod 7</strong></p>\n<p>Per risolverla, occorre trovare un multiplo di 11 che sia contiguo a un multiplo di 7. Un po' di calcolo mentale e si nota che 22 e 21 sono contigui.<br><br>Bene, moltiplichiamo entrambi i membri della congruenza per 2, e sviluppiamo:</p>\n<blockquote>\n<p>22x ≡ 8 mod 7<br>21x + x ≡ 7 + 1 mod 7<br>x ≡ 1 mod 7</p>\n</blockquote>\n<h4>La risoluzione dell'indovinello di Die Hard</h4>\n<p>Le due congruenze in gioco in questo caso sono:</p>\n<blockquote>\n<p>3x ≡ 4 mod 5      [1]<br>5y ≡ 4 mod 3     [2]</p>\n</blockquote>\n<p>Che conducono a due diverse strategie di soluzione. Risolviamo prima la [1]. <br>Moltiplichiamo per 3 entrambi i membri:</p>\n<blockquote>\n<p>9x ≡ 12 mod 5<br>10x - x ≡ 10 + 2 mod 5<br>-x ≡ 2 mod 5<br>x ≡ 3 - 5 mod 5<br>x ≡ 3 mod 5</p>\n</blockquote>\n<p>Quindi occorrerà riempire 3 volte il recipiente A (capacità: 3 galloni, per un totale di 9 galloni), svuotare 1 volta il recipiente B (5 galloni). In B rimangono 4 galloni, come richiesto.</p>\n<p>Cosa accade risolvendo la [2]? Riscriviamola come:</p>\n<blockquote>\n<p>6y - y ≡ 3 + 1 mod 3<br>-y ≡ 1 mod 3<br>y ≡ 2 - 3 mod 3<br>y ≡ 2 mod 3</p>\n</blockquote>\n<p>Quindi, in questo caso, occorre riempire due volte il contenitore B (10 galloni), svuotandolo 2 volte nel recipiente A (6 galloni), lasciando 4 galloni in B.</p>\n<h4>Un semplice programma Python per risolvere l'indovinello</h4>\n<p>Il codice del programma, con i valori dei due contenitori richiesti dalla [1]:</p>\n<blockquote>\n<p>A,B = 3,5<br>Q = 4<br>#<br>a,b = 0,0<br>n_op, n_op_max = 0, B + 1<br>#<br>while a != Q and b != Q and n_op &lt; n_op_max:<br>  if a == 0:<br>    a = A<br>    n_op += 1<br>    print (n_op, '- riempio A [{}/{}, {}/{}]'.format(a, A, b, B))<br>  elif b == B:<br>    b = 0<br>    print (n_op, '- svuoto B [{}/{}, {}/{}]'.format(a, A, b, B))<br>  elif a &lt;= B - b:<br>    b = b + a<br>    a = 0<br>    print (n_op, '- travaso A in B [{}/{}, {}/{}]'.format(a, A, b, B))<br>  else:<br>    t = B - b<br>    a -= t<br>    b = B       <br>    print (n_op,'- travaso {} da A in B, fino a riempire B [{}/{}, {}/{}]'.format(t, a, A, b, B))<br>#<br>if a == Q:<br>   print ('in A è rimasta una quantità',a)<br>elif b == Q:<br>   print ('in B è rimasta una quantità',b)<br>else:<br>   print ('non ho trovato una soluzione')</p>\n</blockquote>\n<p>Ed ecco il risultato:</p>\n<blockquote>\n<p>1 - riempio A [3/3, 0/5]<br>1 - travaso A in B [0/3, 3/5]<br>2 - riempio A [3/3, 3/5]<br>2 - travaso 2 da A in B, fino a riempire B [1/3, 5/5]<br>2 - svuoto B [1/3, 0/5]<br>2 - travaso A in B [0/3, 1/5]<br>3 - riempio A [3/3, 1/5]<br>3 - travaso A in B [0/3, 4/5]<br>in B è rimasta una quantità 4</p>\n</blockquote>\n<p>In ogni riga viene riportato:</p>\n<ul>\n<li>il numero di riempimenti di A, fina a quel punto;</li>\n<li>l'azione compiuta;</li>\n<li>lo stato in cui vengono lasciati A e B.</li>\n</ul>\n<p>Scambiando i valori di A e B si ottiene la soluzione per l'equazione [2]:</p>\n<blockquote>\n<p>A,B = 5,3</p>\n</blockquote>\n<p>Il risultato diviene:</p>\n<blockquote>\n<p>1 - riempio A [5/5, 0/3]<br>1 - travaso 3 da A in B, fino a riempire B [2/5, 3/3]<br>1 - svuoto B [2/5, 0/3]<br>1 - travaso A in B [0/5, 2/3]<br>2 - riempio A [5/5, 2/3]<br>2 - travaso 1 da A in B, fino a riempire B [4/5, 3/3]<br>in A è rimasta una quantità 4</p>\n</blockquote>\n<p>E ora, basta travasi!</p>\n<p><em><strong>Nota</strong><strong>:</strong> questo post riprende un mio vecchio post su Wix.com.</em></p>",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Numeri"
            ],
            "date_published": "2023-01-02T13:53:41+01:00",
            "date_modified": "2023-01-09T16:34:16+01:00"
        },
        {
            "id": "https://70plus.github.io/disegnare-lalbero-16-anni-dopo.html",
            "url": "https://70plus.github.io/disegnare-lalbero-16-anni-dopo.html",
            "title": "Disegnare l&#x27;albero, 16 anni dopo",
            "summary": "Non ricordo con quale versione di Basic realizzai per la prima volta il disegno ricorsivo di un albero, poi ripreso in excel per il mio primo post sul blog Elaborando. Comunque era un Basic senza ricorsività nativa. Per tracciare i&hellip;",
            "content_html": "<p>Non ricordo con quale versione di <strong>Basic</strong> realizzai per la prima volta il disegno ricorsivo di un albero, poi ripreso in excel per il mio primo post sul blog <strong>Elaborando</strong>. Comunque era un Basic senza ricorsività nativa.<br>Per tracciare i vari livelli di ramificazione dell'albero, quindi, creai una primitiva struttura di ricorsività ad hoc sulla chiamata a subroutine del Basic.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://70plus.github.io/media/posts/6/Schermata-2022-01-23-alle-18.18.32.png\" alt=\"Vecchio post su Elaborando\" width=\"1006\" height=\"764\" sizes=\"(min-width: 1500px) calc(7.87vw + 610px), (min-width: 900px) calc(44.48vw + 68px), (min-width: 780px) calc(8vw + 604px), calc(84.35vw + 23px)\" srcset=\"https://70plus.github.io/media/posts/6/responsive/Schermata-2022-01-23-alle-18.18.32-xs.png 300w ,https://70plus.github.io/media/posts/6/responsive/Schermata-2022-01-23-alle-18.18.32-sm.png 480w ,https://70plus.github.io/media/posts/6/responsive/Schermata-2022-01-23-alle-18.18.32-md.png 768w\"></figure><br><br>E se volessi ridisegnare oggi l'albero? Vediamo quali diventano le scelte:</p>\n<ul>\n<li>linguaggio --&gt; Python</li>\n<li>modulo di grafica --&gt; Turtle</li>\n<li>sistema di sviluppo --&gt; replit.com</li>\n</ul>\n<p>e le relative motivazioni.</p>\n<h4>Python</h4>\n<p>È un linguaggio semplice da apprendere e da utilizzare, su qualunque piattaforma.<br>Si può optare per <a href=\"https://www.python.org/downloads/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">l'installazione</a> sul proprio pc (o Mac), oppure per l'utilizzo di una delle piattaforme web di collaborazione.<br>Esempio: <a href=\"https://colab.research.google.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google Colaboratory</a>, <a href=\"https://cocalc.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cocalc</a>, <a href=\"http://replit.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Replit</a>.</p>\n<h4>Turtle</h4>\n<p>La tartaruga (turtle) è la metafora utilizzata  per descrivere l'utilizzo della grafica nel linguaggio <strong>Logo</strong>. Creato <a href=\"https://en.wikipedia.org/wiki/Logo_(programming_language)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">nel 1967</a>, è stato largamente utilizzato in ambito educativo: una tartaruga lascia una traccia sullo schermo, muovendosi secondo direttive del tipo ruota, avanza, arretra.</p>\n<h4>Replit</h4>\n<p>Perché Replit? Il Google Colaboratory ha una propria versione di Turtle, e su Cocalc mi sono fermato alle prime difficoltà nell'importare il modulo Turtle.<br>Escluso per pigrizia di installare il modulo sul mio Mac, mi rimaneva Replit, con account gratuito.<br>La velocità non è entusiasmante, ma va bene per lo scopo amarcord dell'operazione.</p>\n<h4>Il programma</h4>\n<p>La struttura del programma è abbastanza semplice:</p>\n<ol>\n<li>import del modulo turtle;</li>\n<li>la funzione che traccia ricorsivamente le fronde dell'albero;</li>\n<li>la definizione dei parametri che configurano l'albero (dimensioni, colori, livelli e numerosità di ramificazione);</li>\n<li>il blocco principale, che disegna il tronco e chiama la funzione che traccia le fronde;</li>\n<li>export del disegno dell'albero.</li>\n</ol>\n<p>Il risultato è riportato nell'immagine del post.</p>\n<h4>I dettagli</h4>\n<p>L'import del modulo turtle è banale:</p>\n<blockquote>\n<p>from turtle import *</p>\n</blockquote>\n<p>Lasciando da parte per un momento la funzione di tracciamento dell'albero, vediamo la sezione di configurazione dei parametri dell'albero:</p>\n<blockquote>\n<p>size, resize = 120, 1.3<br>pensize(1.5)<br>rot = [-45,-15,20,40]<br>color_list = ['darkgoldenrod','goldenrod','pink']<br>level = 5</p>\n</blockquote>\n<p>Il parametro <strong>size</strong> determina la lunghezza in pixel della base dell'albero. Ogni successivo livello di ramificazione ha una lunghezza scalata progressivamente in riduzione da size secondo il fattore <strong>resize</strong>.<br><br><strong>Pensize</strong> determina lo spessore del tratto che traccia l'albero, mentre la <strong>lista rot</strong> elenca gli angoli di deviazione di ciascuna diramazione, rispetto alla direzione del ramo genitore. Il numero di diramazioni a ciascun livello è quindi dato semplicemente dal numero di elementi nella lista rot.<br><br>La lista <strong>color_list</strong> descrive i colori da applicare rispettivamente alla base dell'albero, ai rami dei livelli successivi, all'ultimo livello. I colori seguono la definizione standard, che può essere consultata sul <a href=\"https://www.w3.org/wiki/CSS/Properties/color/keywords\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">sito del World Wide Web Consortium</a> (W3C).</p>\n<h4>La funzione ricorsiva di tracciamento dell'albero</h4>\n<p>La funzione <strong>branch()</strong> riceve in ingresso il livello di diramazione da tracciare e la dimensione dei rami, oltre al parametro globale resize. Sono implicitamente globali anche le liste, poiché in Python questo tipo di variabile è passato alle funzioni mediante riferimento e non mediante valore. Le liste in questione sono due: color_list e rot.<br><br>Il funzionamento della funzione è abbastanza semplice: se si sono esauriti i livelli richiesti, la funzione ritorna al chiamante senza fare nulla. Altrimenti adegua il colore e traccia, dal punto in cui si trova la tartaruga, un mini albero, chiamando sé stessa.</p>\n<blockquote>\n<p>def branch(level,size):<br>  global resize<br>  if level == 0:<br>      return (True)<br>  else:<br>    curr_color = color()[0]<br>    if level == 1:<br>      color(color_list[-1])<br>    else:<br>      color(color_list[1])<br>    for i in rot:<br>      right(i)<br>      forward(size)<br>      branch(level-1,size/resize)<br>      backward(size)<br>      left(i)<br>    color(curr_color)<br>    return(True)</p>\n</blockquote>\n<h4>Il corpo centrale del programma</h4>\n<p>In questa sezione di codice si predispone lo stato della tartaruga (non visibile e che punta verso il bordo superiore del foglio), si traccia la base dell'albero e poi si chiama la funzione che, ricorsivamente, si occuperà di tracciare l'intero albero.</p>\n<blockquote>\n<p>hideturtle()<br>color(color_list[0])<br>left(90)<br>penup()<br>sety(-size*resize)<br>pendown()<br>forward(size)<br>branch(level,size/resize)</p>\n</blockquote>\n<p>Infine, l'export dell'immagine tracciata</p>\n<blockquote>\n<p>getscreen().getcanvas().postscript(file='albero.ps')</p>\n</blockquote>\n<p>Riducendo a 3 il numeero di livelli dell'albero, si comprende forse meglio il comportamento del programma.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://70plus.github.io/media/posts/6/albero_3.jpg\" alt=\"Albero ricorsivo su 3 livelli\" width=\"600\" height=\"400\" sizes=\"(min-width: 1500px) calc(7.87vw + 610px), (min-width: 900px) calc(44.48vw + 68px), (min-width: 780px) calc(8vw + 604px), calc(84.35vw + 23px)\" srcset=\"https://70plus.github.io/media/posts/6/responsive/albero_3-xs.jpg 300w ,https://70plus.github.io/media/posts/6/responsive/albero_3-sm.jpg 480w ,https://70plus.github.io/media/posts/6/responsive/albero_3-md.jpg 768w\"></figure>\n<h4>Come giocare con il codice</h4>\n<p>Il modo più semplice per mettere le mani sul codice e sperimentare è quello di ricreare l'ambiente in cui l'ho sviluppato. Quindi:</p>\n<ul>\n<li>registrare un account gratuito su replit.com; </li>\n<li>creare un progetto vuoto;</li>\n<li>copia-incollare i pezzi di codice appena riportati, seguendo la sequenza numerata riportata nel punto <em><strong>Il programma</strong></em>;</li>\n<li><em><strong>run!</strong></em></li>\n</ul>\n<p>In alternativa è possibile scaricare il codice del programma in formato compresso <a href=\"https://70plus.github.io/main.py.zip\">da qui</a>.</p>\n<p><em><strong>Nota</strong>: articolo pubblicato più o meno un anno fa su Wix.com.</em></p>",
            "image": "https://70plus.github.io/media/posts/6/albero.jpg",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Numeri"
            ],
            "date_published": "2023-01-02T09:15:40+01:00",
            "date_modified": "2023-01-09T16:36:24+01:00"
        },
        {
            "id": "https://70plus.github.io/una-prima-sistemata-al-blog.html",
            "url": "https://70plus.github.io/una-prima-sistemata-al-blog.html",
            "title": "Una prima sistemata al blog",
            "summary": "Ho preso una serena decisione: mi dimentico di GitLab e rimango su GitHub, ma con un profilo diverso. Mi appresto quindi a cancellare Petro-pas, praticamente inutilizzato dal tempo che fu, e ho creato 70plus. Mutatis mutandis, cioè aggiornata la configurazione&hellip;",
            "content_html": "<p>Ho preso una serena decisione: mi dimentico di <strong>GitLab</strong> e rimango su <strong>GitHub</strong>, ma con un profilo diverso. Mi appresto quindi a cancellare <strong>Petro-pas</strong>, praticamente inutilizzato dal tempo che fu, e ho creato <strong>70plus</strong>.<br><em>Mutatis mutandis</em>, cioè aggiornata la configurazione del server su <strong>Publii</strong>, ho quindi risincronizzato il contenuto del blog.</p>\n<p>Nelle prossime settimane riporterò qui qualche pensiero disperso nel tempo sul web.</p>\n<p>Al momento ho scelto il tema gratuito <a href=\"https://marketplace.getpublii.com/themes/square/\" target=\"_blank\" rel=\"noopener noreferrer\">Square</a>, e l'url del blog è <strong>70plus.github.io</strong>, molto sintetica. Ecco cosa è venuto fuori:</p>\n<figure class=\"post__image post__image--center\"><img loading=\"lazy\"  src=\"https://70plus.github.io/media/posts/5/screenshot_2gen23.png\" alt=\"Screenshot del sito al 2 gennaio 2023\" width=\"1366\" height=\"768\" sizes=\"(min-width: 1500px) calc(7.87vw + 610px), (min-width: 900px) calc(44.48vw + 68px), (min-width: 780px) calc(8vw + 604px), calc(84.35vw + 23px)\" srcset=\"https://70plus.github.io/media/posts/5/responsive/screenshot_2gen23-xs.png 300w ,https://70plus.github.io/media/posts/5/responsive/screenshot_2gen23-sm.png 480w ,https://70plus.github.io/media/posts/5/responsive/screenshot_2gen23-md.png 768w\"></figure><br>In alto a destra c'è l'icona del menu <em>a sandwich</em>, per ora con solo due voci: menu e bio. Seguiranno altre pagine <em>non blog</em>, per temi specifici e di rilievo. Quali? Boh.</p>\n<p> </p>\n<p> </p>",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Cose informatiche"
            ],
            "date_published": "2023-01-02T08:41:21+01:00",
            "date_modified": "2023-01-09T16:38:13+01:00"
        },
        {
            "id": "https://70plus.github.io/2023-eccoti-qui.html",
            "url": "https://70plus.github.io/2023-eccoti-qui.html",
            "title": "2023, eccoti qui",
            "summary": "Dovrebbe essere il momento dei buoni propositi, ma non saprei da dove cominciare. Meno arrabbiature? Alimentazione più sana? Più esercizio fisico? Ecco, forse comincerei proprio da qui, dall'esercizio fisico. Sono anni che mi propongo di corricchiare durante l'inverno, per essere&hellip;",
            "content_html": "<p>Dovrebbe essere il momento dei <strong>buoni propositi</strong>, ma non saprei da dove cominciare. Meno arrabbiature? Alimentazione più sana? Più esercizio fisico?</p>\n<p>Ecco, forse comincerei proprio da qui, dall'<strong>esercizio fisico</strong>. Sono anni che mi propongo di corricchiare durante l'inverno, per essere già rodato all'arrivo della primavera. Il 2023 potrebbe essere l'anno giusto per farlo.</p>\n<p>Per <strong>l'alimentazione</strong> direi che, a parte qualche moderato eccesso occasionale, sono già sulla buona strada. Devo imparare a evitare la pizza di sera, quella in pizzeria o da asporto, perché la casalinga ha un carico glicemico minore, o almeno così mi illudo che sia.</p>\n<p>Per le <strong>arrabbiature</strong> non so cosa fare, quando arrivano arrivano.</p>\n<p>E poi la <strong>pigrizia</strong>, ecco, questo è un punto importante. Devo essere più determinato e concreto, ed eliminare i <em>ciondolamenti</em>. È banale dirlo, ma così si libererà tempo per fare altre cose.</p>\n<p><em>Foto di apertura di <a href=\"https://pixabay.com/it/users/geralt-9301/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1647323\" target=\"_blank\" rel=\"noopener\">Gerd Altmann</a> da <a href=\"https://pixabay.com/it//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1647323\" 3=\"\" target=\"_blank\" rel=\"noopener\">Pixabay</a>.</em></p>",
            "image": "https://70plus.github.io/media/posts/3/board-1647323_1920.jpg",
            "author": {
                "name": "Pasquale"
            },
            "tags": [
                   "Pensieri"
            ],
            "date_published": "2023-01-01T09:20:06+01:00",
            "date_modified": "2023-01-09T16:38:58+01:00"
        }
    ]
}
